{"version":3,"sources":["components/Button/styles.scss","layout/App/Header/styles.scss","layout/App/styles.scss","layout/App/Form/styles.scss","components/Button/index.tsx","layout/App/Header/LoginDialog.tsx","layout/App/Header/RegisterDialog.tsx","services/historyService.ts","layout/App/Header/LogoutButton.tsx","layout/App/Header/PrivateButton.tsx","store/actions/index.ts","layout/App/Header/index.tsx","components/Card/Card.tsx","layout/App/Private/Private.tsx","components/SearchInput/index.tsx","layout/App/Home/Home.tsx","layout/App/Post/Comment.tsx","layout/App/Post/Comments.tsx","layout/App/Post/Post.tsx","layout/App/Footer/index.tsx","layout/App/404/index.tsx","layout/App/Form/index.tsx","layout/App/App.tsx","store/reducers/accountReducer.ts","store/reducers/index.ts","store/index.ts","utils/localStore.ts","index.tsx","layout/App/Private/styles.scss"],"names":["module","exports","Button","children","props","className","styles","root","LoginDialog","state","visible","errorFromServer","handleOpenLoginDialog","setState","handleCloseLoginDialog","nameChange","passwordChange","onSubmit","values","a","password","name","login","axios","post","res","data","token","id","this","onClick","title","onClose","registration","validate","errors","length","render","handleSubmit","submitting","pristine","form","console","log","response","input","meta","type","placeholder","error","touched","errorField","row","disabled","React","Component","RegisterDialog","handleOpenDialog","handleCloseDialog","usernameChange","emailChange","email","username","confirm","reset","alert","historyService","history","createBrowserHistory","LogoutButton","logout","window","push","PrivateButton","handleClick","historyServicse","actionTypes","_Header","authenticate","headers","isAuth","handleClickToLogo","prevProps","prevState","buttonSet","Dropdown","text","Menu","direction","Item","nextProps","Header","connect","accountStore","dispatch","SimpleCard","author","description","url","style","theme","Card","href","header","fluid","_Private","isDataEmpty","handleUpdate","handleDelete","result","filter","obj","_id","delete","then","catch","e","dataFromBD","status","addButton","plus","map","container","key","marginBottom","button","delButton","Private","InputWithIcon","onChange","Input","icon","Home","selectValue","inputValue","handleSelectChange","target","value","handleInputChange","reverse","filteredData","item","toLowerCase","includes","display","marginRight","event","width","Commentary","date","Comment","Content","Author","as","Metadata","format","withTitle","Text","_Comments","textareaValue","postId","handleTextAreaChange","Group","comments","dividing","comment","Form","reply","TextArea","content","labelPosition","primary","buttonContainer","Comments","Post","match","params","Footer","footer","FourOFour","WishForm","updating","onUpdate","put","initialValues","select","_App","body","path","exact","component","App","accountReducer","payload","undefined","combineReducers","initialState","JSON","parse","localStorage","getItem","loadState","store","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","subscribe","getState","setItem","stringify","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4e243e58.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__21ruz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__36oOn\",\"title\":\"styles_title__16aM7\",\"error\":\"styles_error__2sNq-\",\"registration\":\"styles_registration__2oQFi\",\"errorField\":\"styles_errorField__1Nvmj\",\"row\":\"styles_row__30zYH\",\"buttonSet\":\"styles_buttonSet__1fOGN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__z_8qL\",\"body\":\"styles_body__36xgC\",\"content\":\"styles_content__8SZP9\",\"plus\":\"styles_plus__18oPA\",\"comments\":\"styles_comments__3eqMj\",\"buttonContainer\":\"styles_buttonContainer__1Bn3T\",\"addButton\":\"styles_addButton__3sUMu\",\"footer\":\"styles_footer__1UlIF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"styles_error__1UYgU\",\"button\":\"styles_button__XTQ-u\",\"root\":\"styles_root__DuaII\",\"select\":\"styles_select__yr5zS\",\"errorField\":\"styles_errorField__2cl5l\"};","import React from 'react';\nimport styles from './styles.scss';\n\nconst Button: React.FC<React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>> = ({children, ...props}) => <button className={styles.root} {...props}>{children}</button>;\nexport default Button\n","import React from 'react';\nimport Dialog from \"rc-dialog\";\nimport styles from \"./styles.scss\";\nimport Button from \"../../../components/Button\";\nimport axios from \"axios\";\nimport {Field, Form} from \"react-final-form\";\nimport {Form as UIForm} from \"semantic-ui-react\";\n\ninterface IProps {\n    login: (token: string, id: string) => void\n}\n\ninterface IState {\n    visible: boolean\n    errorFromServer?: string\n}\n\ninterface IForm {\n    name?: string\n    password?: string\n}\n\nexport default class LoginDialog extends React.Component<IProps, IState> {\n    state = {visible: false, errorFromServer: ''}\n\n    handleOpenLoginDialog = () => this.setState({visible: true})\n\n    handleCloseLoginDialog = () => this.setState({visible: false})\n\n    nameChange = () => {\n        if (this.state.errorFromServer === \"Email or username is wrong\") {\n            this.setState({errorFromServer: ''})\n        }\n    }\n\n    passwordChange = () => {\n        if (this.state.errorFromServer === \"Invalid password\") {\n            this.setState({errorFromServer: ''})\n        }\n    }\n\n    onSubmit = async (values: IForm) => {\n        const {password, name} = values;\n        const {login} = this.props\n        const res = await axios.post('/user/login', {name, password})\n        const [token, id] = res.data;\n        login(token, id);\n        this.setState({visible: false, errorFromServer: ''})\n    }\n\n    render() {\n        const {visible} = this.state\n\n        return <>\n            <Button onClick={this.handleOpenLoginDialog}>Login</Button>\n            <Dialog\n                title={'Login'}\n                onClose={this.handleCloseLoginDialog}\n                visible={visible}\n            >\n                <div className={styles.registration}>\n                    <Form\n                        onSubmit={this.onSubmit}\n                        validate={(values: IForm) => {\n                            const errors: IForm = {}\n                            if (!values.name) {\n                                errors.name = 'Required'\n                            } else if (values.name.length < 3) {\n                                errors.name = 'Username must be over 2 characters'\n                            }\n                            if (!values.password) {\n                                errors.password = 'Required'\n                            } else if (values.password.length < 6) {\n                                errors.password = 'Password must be over 5 characters'\n                            }\n                            switch (this.state.errorFromServer) {\n                                case \"Email or username is wrong\": {\n                                    errors.name = \"Email or username is wrong\"\n                                    break\n                                }\n                                case \"Invalid password\": {\n                                    errors.password = \"Invalid password\"\n                                    break\n                                }\n                            }\n                            return errors\n                        }}\n                        render={({handleSubmit, submitting, pristine, form}) => (\n                            <UIForm onSubmit={async (values) => {\n                                try {\n                                    await handleSubmit(values)\n                                    await this.setState({visible: false, errorFromServer: ''})\n                                } catch (e) {\n                                    console.log(e.response.data)\n                                    this.setState({errorFromServer: e.response.data})\n                                }\n                            }}>\n                                <Field name=\"name\">\n                                    {({input, meta}) => (\n                                        <div>\n                                            <label>Login</label>\n                                            <input {...input} type=\"text\" placeholder=\"Username or Email\"\n                                                   onClick={this.nameChange}\n                                                   className={meta.error && meta.touched ? styles.errorField : ''}/>\n                                            {meta.error && meta.touched &&\n                                            <span className={styles.error}>{meta.error}</span>}\n                                        </div>\n                                    )}\n                                </Field>\n                                <Field name=\"password\">\n                                    {({input, meta}) => (\n                                        <div>\n                                            <label>Password</label>\n                                            <input {...input} type=\"password\" placeholder=\"Password\"\n                                                   onClick={this.passwordChange}\n                                                   className={meta.error && meta.touched ? styles.errorField : ''}/>\n                                            {meta.error && meta.touched &&\n                                            <span className={styles.error}>{meta.error}</span>}\n                                        </div>\n                                    )}\n                                </Field>\n                                <div className=\"buttons\">\n                                    <div className={styles.row}>\n                                        <Button type={'submit'} disabled={submitting || pristine}>Log In</Button>\n                                    </div>\n                                </div>\n                            </UIForm>\n                        )}\n                    />\n                </div>\n            </Dialog>\n        </>\n\n    }\n}\n","import React from 'react';\nimport Dialog from \"rc-dialog\";\nimport styles from \"./styles.scss\";\nimport Button from \"../../../components/Button\";\nimport axios from \"axios\";\nimport {Form, Field} from 'react-final-form'\nimport {Form as UIForm} from 'semantic-ui-react'\n\n\ninterface IProps {\n}\n\ninterface IForm {\n    username?: string\n    email?: string\n    password?: string\n    confirm?: string\n}\n\ninterface IState {\n    visible: boolean\n    errorFromServer?: string\n}\n\n\nexport default class RegisterDialog extends React.Component<IProps, IState> {\n    state = {visible: false, errorFromServer: ''};\n\n    handleOpenDialog = () => this.setState({visible: true});\n\n    handleCloseDialog = () => {\n        this.setState({visible: false, errorFromServer: ''})\n\n    }\n\n    usernameChange = () => {\n        if (this.state.errorFromServer === \"Username already exists\") {\n            this.setState({errorFromServer: ''})\n        }\n    }\n\n    emailChange = () => {\n        if (this.state.errorFromServer === \"Email already exists\" || '\"email\" must be a valid email') {\n            this.setState({errorFromServer: ''})\n        }\n    }\n\n    onSubmit = async (values: IForm) => {\n        const {email, password, username} = values;\n        const res = await axios.post('/user/register', {email, password, username});\n        console.log(res)\n\n    }\n\n    render() {\n        const {visible} = this.state;\n        return <>\n            <Button onClick={this.handleOpenDialog}>Register</Button>\n            <Dialog\n                title={'Register'}\n                onClose={this.handleCloseDialog}\n                visible={visible}\n            >\n                <div className={styles.registration}>\n                    <Form\n                        onSubmit={this.onSubmit}\n                        validate={(values: IForm) => {\n                            const errors: IForm = {}\n                            if (!values.username) {\n                                errors.username = 'Required'\n                            } else if (values.username.length < 3) {\n                                errors.username = 'Username must be over 2 characters'\n                            }\n                            if (!values.email) {\n                                errors.email = 'Required'\n                            } else if (values.email.length < 6) {\n                                errors.email = 'Email must be over 5 characters'\n                            }\n                            if (!values.password) {\n                                errors.password = 'Required'\n                            } else if (values.password.length < 6) {\n                                errors.password = 'Password must be over 5 characters'\n                            }\n                            if (!values.confirm) {\n                                errors.confirm = 'Required'\n                            } else if (values.confirm !== values.password) {\n                                errors.confirm = 'Must match'\n                            }\n                            switch (this.state.errorFromServer) {\n                                case \"Username already exists\": {\n                                    errors.username = \"Username already exists\"\n                                    break\n                                }\n                                case '\"email\" must be a valid email': {\n                                    errors.email = \"Email must be a valid\"\n                                    break\n                                }\n                                case \"Email already exists\": {\n                                    errors.email = \"Email already exists\"\n                                    break\n                                }\n                            }\n                            return errors\n                        }}\n                        render={({handleSubmit, form, submitting, pristine, values}) => (\n                            <UIForm onSubmit={async (values) => {\n                                try {\n                                    await handleSubmit(values)\n                                    form.reset()\n                                    await this.setState({visible: false, errorFromServer: ''})\n                                    alert('You have successfully registered!')\n                                } catch (e) {\n                                    console.log(e.response.data)\n                                    this.setState({errorFromServer: e.response.data})\n                                }\n                            }}>\n                                {!this.state.visible ? form.reset() : null} {/* Reset form on close */}\n                                <Field name=\"username\">\n                                    {({input, meta}) => (\n                                        <div>\n                                            <label>Username</label>\n                                            <input {...input} type=\"text\" placeholder=\"Username\"\n                                                   onClick={this.usernameChange}\n                                                   className={meta.error && meta.touched ? styles.errorField : ''}/>\n                                            {meta.error && meta.touched &&\n                                            <span className={styles.error}>{meta.error}</span>}\n                                        </div>\n                                    )}\n                                </Field>\n                                <Field name=\"email\">\n                                    {({input, meta}) => (\n                                        <div>\n                                            <label>Email</label>\n                                            <input {...input} type=\"text\" placeholder=\"Email\"\n                                                   onClick={this.emailChange}\n                                                   className={meta.error && meta.touched ? styles.errorField : ''}/>\n                                            {meta.error && meta.touched &&\n                                            <span className={styles.error}>{meta.error}</span>}\n                                        </div>\n                                    )}\n                                </Field>\n                                <Field name=\"password\">\n                                    {({input, meta}) => (\n                                        <div>\n                                            <label>Password</label>\n                                            <input {...input} type=\"password\" placeholder=\"Password\"\n                                                   className={meta.error && meta.touched ? styles.errorField : ''}/>\n                                            {meta.error && meta.touched &&\n                                            <span className={styles.error}>{meta.error}</span>}\n                                        </div>\n                                    )}\n                                </Field>\n                                <Field name=\"confirm\">\n                                    {({input, meta}) => (\n                                        <div>\n                                            <label>Confirm password</label>\n                                            <input {...input} type=\"password\" placeholder=\"Confirm password\"\n                                                   className={meta.error && meta.touched ? styles.errorField : ''}/>\n                                            {meta.error && meta.touched &&\n                                            <span className={styles.error}>{meta.error}</span>}\n                                        </div>\n                                    )}\n                                </Field>\n                                <div className=\"buttons\">\n                                    <div className={styles.row}>\n                                        <Button type={'submit'} disabled={submitting || pristine}>Register</Button>\n                                    </div>\n                                </div>\n                            </UIForm>\n                        )}\n                    />\n                </div>\n            </Dialog>\n        </>\n    }\n}","import {createBrowserHistory, History} from 'history';\n\nclass HistoryService {\n    history: History | null = null;\n    constructor() {\n        this.history = createBrowserHistory();\n    }\n}\n\n\nconst historyService = new HistoryService();\n\nexport default historyService;\n","import Button from \"../../../components/Button\";\nimport React from \"react\";\nimport historyService from \"../../../services/historyService\";\n\ninterface IProps {\n    logout: () => void\n}\n\ninterface IState {\n}\n\nexport default class LogoutButton extends React.Component<IProps, IState> {\n    logout = () => {\n        if (window.confirm('Are you sure you wish to logout?')) {\n            this.props.logout()\n            historyService.history!.push('/')\n        }\n    }\n\n    render() {\n        return <Button onClick={this.logout}>Logout</Button>\n    }\n}\n\n\n\n","import Button from \"../../../components/Button\";\nimport React from \"react\";\nimport historyServicse from \"../../../services/historyService\";\n\ninterface IProps {\n}\n\ninterface IState {\n}\n\nexport default class PrivateButton extends React.Component<IProps, IState> {\n    handleClick = () => historyServicse.history!.push('/private')\n\n\n    render() {\n        return <Button onClick={this.handleClick}>Private Cabinet</Button>\n    }\n}\n","export const actionTypes = {\n    LOGIN: 'LOGIN',\n    LOGOUT: 'LOGOUT'\n}\n\n\nexport interface IAction {\n    type: string\n}\n\nexport interface ILoginAction extends IAction {\n    token: string\n    id: string\n}\n\nexport const login = (token: string, id: string): ILoginAction => ({\n    type: actionTypes.LOGIN,\n    token,\n    id\n});\nexport const logout = (): IAction => ({\n    type: actionTypes.LOGOUT,\n});","import React from 'react';\nimport styles from './styles.scss';\nimport 'rc-dialog/assets/index.css'\nimport LoginDialog from './LoginDialog'\nimport RegisterDialog from \"./RegisterDialog\";\nimport LogoutButton from './LogoutButton'\nimport PrivateButton from \"./PrivateButton\";\nimport historyService from \"../../../services/historyService\";\nimport {connect} from \"react-redux\";\nimport {Dispatch} from \"redux\";\nimport {login, logout} from \"../../../store/actions\";\nimport {IStore} from \"../../../store/reducers\";\nimport {Dropdown} from 'semantic-ui-react'\nimport axios from \"axios\";\n\ninterface IState {\n    token?: string\n    isAuth: boolean\n}\n\ninterface IProps {\n    id?: string\n    token?: string\n    login?: (token: string, id: string) => void\n    logout?: () => void\n}\n\n\nclass _Header extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n        this.state = {token: props.token, isAuth: false}\n    }\n\n      static getDerivedStateFromProps(nextProps: Readonly<IProps>, prevState: IState) {\n          const {token} = nextProps\n          if(!token) return {...prevState, isAuth: false}\n          return (token !== prevState.token) ? {...prevState, token} : null\n      }\n\n    authenticate = async () => {\n        const {token} = this.props\n        const isAuth = (await axios(`/user/isAuth`, {headers: {'auth-token': token}})).data\n        if (isAuth !== this.state.isAuth) {\n            if (isAuth) {\n                this.setState({isAuth})\n            } else {\n                this.setState({isAuth: false})\n            }\n        }\n    }\n\n    async componentDidMount() {\n        await this.authenticate()\n    }\n\n\n    async componentDidUpdate(prevProps: Readonly<IProps>, prevState: IState) {\n        await this.authenticate()\n    }\n\n    handleClickToLogo = () => historyService.history!.push('/');\n\n    render() {\n        const {login, logout} = this.props;\n        return (\n            <div className={styles.root}>\n                <div onClick={this.handleClickToLogo} className={styles.title}>WISHERY</div>\n                <div className={styles.buttonSet}>\n                    <Dropdown text='Account'>\n                        <Dropdown.Menu direction={'left'}>\n                            {this.state.isAuth\n                                ? <>\n                                    <Dropdown.Item>\n                                        <PrivateButton/>\n                                    </Dropdown.Item>\n                                    <Dropdown.Item>\n                                        {logout && <LogoutButton logout={logout}/>}\n                                    </Dropdown.Item>\n                                </>\n                                : <>\n                                    <Dropdown.Item>\n                                        {login && <LoginDialog login={login}/>}\n                                    </Dropdown.Item>\n                                    <Dropdown.Item>\n                                        <RegisterDialog/>\n                                    </Dropdown.Item>\n                                </>}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({accountStore: {id, token}}: IStore) => ({id, token})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    login: (token: string, id: string) => dispatch(login(token, id)),\n    logout: () => dispatch(logout()),\n})\n\nconst Header = connect(mapStateToProps, mapDispatchToProps)(_Header)\n\nexport default Header\n","import React from 'react'\nimport {Card} from 'semantic-ui-react'\n\ninterface IProps {\n    style?: object\n    url?: string\n    title: string\n    author: string\n    theme: string\n    description?: string\n    date?: string\n}\n\nconst SimpleCard: React.FC<IProps> = ({title, author, description, url, style, theme}) => {\n    return (\n        <Card\n            style={style}\n            href={url}\n            header={title}\n            meta={`${author}, theme: ${theme}`}\n            description={description}\n            fluid\n        />\n    )\n}\n\nexport default SimpleCard\n","import React from 'react';\nimport axios from \"axios\";\nimport Card from \"../../../components/Card/Card\";\nimport historyService from \"../../../services/historyService\";\nimport {IStore} from \"../../../store/reducers\";\nimport {connect} from \"react-redux\";\nimport styles from './styles.scss'\nimport Button from \"../../../components/Button\";\n\n\ninterface IProps {\n    id?: string,\n    token?: string\n}\n\ntype TDataItem = {\n    author: string\n    description: string\n    title: string\n    _id: string\n    theme: string\n    date?: string\n}\n\ninterface IState {\n    data: TDataItem[]\n    isAuth: boolean\n    isDataEmpty: boolean\n}\n\n\nclass _Private extends React.Component<IProps, IState> {\n    state = {\n        data: [],\n        isAuth: false,\n        isDataEmpty: false\n    }\n\n    static getDerivedStateFromProps(nextProps: Readonly<IProps>, prevState: IState) {\n        const {token} = nextProps;\n        if (!token) return {...prevState, isAuth: false}\n        return {...prevState, isAuth: true}\n    }\n\n    componentDidMount() {\n        const {id, token} = this.props\n        axios(`/private/${id}`, {headers: {'auth-token': token}})\n            .then(res => {\n                this.setState({isAuth: true})\n            })\n            .catch(e => {\n                this.setState({isAuth: false})\n            })\n    }\n\n    async componentDidUpdate(prevProps: Readonly<IProps>, prevState: IState) {\n        const {id, token} = this.props\n        const {data, isDataEmpty} = this.state\n        if (isDataEmpty) return null\n        if (data.length === 0) {\n            try {\n                const dataFromBD = (await axios(`/private/${id}`, {headers: {'auth-token': token}})).data\n                if (dataFromBD.length !== 0) {\n                    this.setState({data: dataFromBD})\n                } else {\n                    this.setState({isDataEmpty: true})\n                }\n            } catch (e) {\n                if ((e.response.status === 400 || 401) && this.state.isAuth) {\n                    this.setState({isAuth: false})\n                }\n            }\n        }\n    }\n\n    handleUpdate = (id: string) => {\n        historyService.history!.push(`/posts/update/${id}`)\n    }\n\n    handleDelete = async (id: string) => {\n        let confirmation = window.confirm('Are you sure want to delete this wish?')\n        if (confirmation) {\n            const result = this.state.data.filter((obj: TDataItem) => obj._id !== id)\n            this.setState({data: result})\n            await axios.delete(`/posts/${id}`)\n        }\n    }\n\n    render() {\n        if (!this.state.isAuth) return <h1>403 forbidden</h1>\n        return (\n            <>\n                {this.state.isDataEmpty\n                    ? <div>\n                        <h2>You have not any wishes :(</h2>\n                        <div className={styles.addButton}>\n                            <Button onClick={() => historyService.history!.push('/posts/add')}>\n                                <span className={styles.plus}>+</span>Add new Wish!\n                            </Button>\n                        </div>\n                    </div>\n                    : this.state.data.length > 0\n                        ? <h2>Here you can Update & Delete your Wishes</h2>\n                        : null\n                }\n                {this.state.data.map((obj: TDataItem) =>\n                    <div className={styles.container} key={obj._id}>\n                        <Card\n                            style={{marginBottom: 0}}\n                            theme={obj.theme}\n                            url={`/posts/${obj._id}`}\n                            author={obj.author}\n                            title={obj.title}\n                        />\n                        <div className={styles.button}>\n                            <button className={styles.delButton} onClick={() => this.handleUpdate(obj._id)}\n                                    title={'Update!'}>\n                                <i className=\"material-icons\">update</i>\n                            </button>\n                        </div>\n                        <div className={styles.button}>\n                            <button className={styles.delButton} onClick={() => this.handleDelete(obj._id)}\n                                    title={'Delete!'}>\n                                <i className=\"material-icons-outlined\">delete_forever</i>\n                            </button>\n                        </div>\n                    </div>\n                )}\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = ({accountStore: {id, token}}: IStore) => ({id, token})\n\nconst Private = connect(mapStateToProps)(_Private)\n\nexport default Private\n","import React from 'react'\nimport { Input } from 'semantic-ui-react'\n\ninterface IProps {\n    onChange: any\n}\n\nconst InputWithIcon:React.FC<IProps> = ({onChange}) => <Input onChange={onChange} icon='search' placeholder='Search...' />\n\nexport default InputWithIcon","import React from 'react';\nimport axios from \"axios\";\nimport Card from \"../../../components/Card/Card\";\nimport {Form as UIForm} from \"semantic-ui-react\";\nimport InputWithIcon from \"../../../components/SearchInput\";\n\ninterface IProps {\n}\n\ntype TDataItem = {\n    _id: string\n    author: string\n    description?: string\n    title: string\n    theme: string\n    date?: string\n}\n\ninterface IState {\n    data: TDataItem[] | null\n    selectValue: string\n    inputValue: string\n}\n\n\nclass Home extends React.Component<IProps, IState> {\n    state = {\n        data: [],\n        selectValue: '',\n        inputValue: ''\n    }\n\n    async componentDidMount() {\n        const data = (await axios(`/`)).data\n        data.reverse()\n        this.setState({data})\n    }\n\n    handleSelectChange = (e: any) => {\n        console.log(e.target.value)\n        this.setState({selectValue: e.target.value})\n    }\n    handleInputChange = (e: any) => {\n        console.log(e.target.value)\n        this.setState({inputValue: e.target.value})\n    }\n\n    render() {\n        const {data, selectValue, inputValue} = this.state\n        const filteredByInput: TDataItem[] = data.filter((item: TDataItem) => {\n            if (inputValue !== '') {\n                return item.title.toLowerCase().includes(inputValue.toLowerCase())\n            } else {\n                return item\n            }\n        })\n        const filteredData: TDataItem[] = filteredByInput.filter(\n            (item: TDataItem) => selectValue ? item.theme === selectValue : item)\n        return (\n            <>\n                <div style={{display: \"inline-block\", marginRight: \"1em\"}}>\n                    <InputWithIcon onChange={(event: any) => this.handleInputChange(event)}/>\n                </div>\n                <UIForm style={{width: \"10em\", display: \"inline-block\"}}>\n                    <label>Theme of wishes: </label>\n                    <select onChange={(event: any) => this.handleSelectChange(event)}>\n                        <option value=\"\">All</option>\n                        <option value=\"Drink\">Drink</option>\n                        <option value=\"Walk\">Walk</option>\n                        <option value=\"Cinema\">Cinema</option>\n                        <option value=\"Concert\">Concert</option>\n                        <option value=\"Outdoors\">Outdoors</option>\n                        <option value=\"Chill\">Chill</option>\n                        <option value=\"Travel\">Travel</option>\n                        <option value=\"Game\">Game</option>\n                        <option value=\"Other\">Other</option>\n                    </select>\n                </UIForm>\n                {filteredData.map((obj: TDataItem) =>\n                    <Card\n                        author={obj.author}\n                        url={`/posts/${obj._id}`}\n                        theme={obj.theme}\n                        title={obj.title}\n                        key={obj.author + obj.description + obj.title}\n                    />\n                )}\n            </>\n        )\n    }\n}\n\nexport default Home","import {Comment} from \"semantic-ui-react\";\nimport React from \"react\";\nimport Moment from 'react-moment';\n\n\ninterface IProps {\n    author?: string\n    text?: string\n    date?: string\n}\n\nconst Commentary: React.FC<IProps> = ({author, text, date}) => (\n    <Comment>\n        <Comment.Content>\n            <Comment.Author as='a'>{author}</Comment.Author>\n            <Comment.Metadata>\n                <div>\n                    <Moment format=\"D MMM YYYY\" withTitle>\n                        {date}\n                    </Moment>\n                </div>\n            </Comment.Metadata>\n            <Comment.Text>{text}</Comment.Text>\n        </Comment.Content>\n    </Comment>\n)\nexport default Commentary","import React from 'react'\nimport {Button, Comment, Form, Header} from 'semantic-ui-react'\nimport axios from 'axios'\nimport Commentary from './Comment'\nimport {IStore} from \"../../../store/reducers\"\nimport {connect} from \"react-redux\"\nimport styles from '../styles.scss'\nimport LoginDialog from \"../Header/LoginDialog\";\nimport RegisterDialog from \"../Header/RegisterDialog\";\nimport {Dispatch} from \"redux\";\nimport {login} from \"../../../store/actions\";\n\ntype TDataItem = {\n    author: string\n    text: string\n    date: string\n}\n\ninterface IProps {\n    login?: (token: string, id: string) => void\n    postId: string\n    id?: string,\n    token?: string\n}\n\n\ninterface IState {\n    data: TDataItem[] | null\n    textareaValue: string\n    isAuth: boolean\n    // token?: string\n}\n\n\nclass _Comments extends React.Component<IProps, IState> {\n    state = {\n        textareaValue: '',\n        data: [],\n        isAuth: false\n    }\n\n    static getDerivedStateFromProps(nextProps: Readonly<IProps>, prevState: IState) {\n        const {token} = nextProps\n        if (!token) return {...prevState, isAuth: false}\n        return {...prevState, isAuth: true}\n    }\n\n    async componentDidMount() {\n        const data = (await axios(`/comments/${this.props.postId}`)).data\n        if (data !== null) {\n            this.setState({data})\n        }\n        const {token} = this.props\n        const isAuth = (await axios(`/user/isAuth`, {headers: {'auth-token': token}})).data\n        if (isAuth) return this.setState({isAuth})\n    }\n\n    handleSubmit = async () => {\n        const {textareaValue} = this.state\n        const {token} = this.props\n        if(textareaValue && token) {\n            const res: TDataItem = (await axios.post(`/comments/${this.props.postId}`, {\n                author: this.props.id,\n                text: textareaValue\n            }, {headers: {'auth-token': token}})).data\n            this.setState({data: [...this.state.data, res], textareaValue: ''})\n        }\n    }\n\n    handleTextAreaChange = (e: any) => {\n        this.setState({textareaValue: e.target.value})\n    }\n\n    render() {\n        const {login} = this.props;\n        return (\n            <Comment.Group className={styles.comments}>\n                <Header as='h3' dividing>\n                    Comments\n                </Header>\n                {this.state.data\n                    ? this.state.data.map((comment: TDataItem) => <Commentary key={comment.date}\n                                                                              author={comment.author}\n                                                                              text={comment.text}\n                                                                              date={comment.date}/>)\n                    : <p>You will be the first!</p>\n                }\n                {!this.state.isAuth\n                    ? <div className={styles.buttonContainer}>\n                        {login && <LoginDialog login={login}/>} or <RegisterDialog/>\n                        to leave a comment\n                    </div>\n                    : <Form reply>\n                        <Form.TextArea onChange={(e: any) => this.handleTextAreaChange(e)}\n                                       value={this.state.textareaValue}\n                                       placeholder={'Type your reply here'}\n                        />\n                        <Button content='Add Reply' labelPosition='left' icon='edit' primary\n                                onClick={this.handleSubmit}\n                        />\n                    </Form>\n                }\n            </Comment.Group>\n        )\n    }\n}\n\nconst mapStateToProps = ({accountStore: {id, token}}: IStore) => ({id, token})\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    login: (token: string, id: string) => dispatch(login(token, id))\n})\n\nconst Comments = connect(mapStateToProps, mapDispatchToProps)(_Comments)\n\nexport default Comments","import React from 'react';\nimport axios from \"axios\";\nimport Card from \"../../../components/Card/Card\";\nimport Comments from './Comments';\n\ninterface IProps {\n    match?: any\n}\n\ntype TDataItem = {\n    _id: string\n    author: string\n    description?: string\n    title: string\n    date: string\n    theme: string\n}\ntype TCommentItem = {\n    _id?: string\n    author?: string\n    text?: string\n}\n\ninterface IState {\n    data: TDataItem | null,\n    comments: TCommentItem[] | null\n}\n\n\nclass Post extends React.Component<IProps, IState> {\n    state = {\n        data: {\n            _id: '',\n            author: '',\n            description: '',\n            title: '',\n            theme: '',\n            date: ''\n        },\n        comments: []\n    }\n\n    async componentDidMount() {\n        const data = (await axios(`/posts/${this.props.match.params.id}`)).data\n        this.setState({data: data})\n    }\n\n    render() {\n        const {author, description, title, theme} = this.state.data\n        return (\n            <>\n                <Card\n                    author={author}\n                    description={description}\n                    title={title}\n                    theme={theme}\n                />\n                <Comments postId={this.props.match.params.id}/>\n            </>\n        )\n    }\n}\n\nexport default Post","import React from \"react\";\nimport styles from \"../styles.scss\";\n\nconst Footer: React.FC = () => <div className={styles.footer}>© Wishery</div>\n\nexport default Footer","import React from 'react'\ninterface IProps {\n}\n\nconst FourOFour: React.FC<IProps> = () => {\n    return (\n        <h1>404 Not found</h1>\n    )\n}\n\nexport default FourOFour","import React from 'react'\nimport {Form, Field} from 'react-final-form'\nimport {Button, Form as UIForm} from 'semantic-ui-react'\nimport styles from './styles.scss';\nimport axios from \"axios\";\nimport historyService from \"../../../services/historyService\";\n// import {DatePick} from \"../../../components/DatePicker\";\n\ninterface IProps {\n    match?: any\n    token?: string\n    title?: string\n    author?: string\n    description?: string\n    theme?: string\n}\n\n\ninterface IState {\n    isAuth: boolean\n    token?: string\n    updating?: boolean\n    data: {\n        description: string\n        title: string\n    }\n}\n\n\nclass WishForm extends React.Component<IProps, IState> {\n    state = {\n        isAuth: false,\n        updating: false,\n        data: {\n            description: '',\n            title: '',\n            theme: ''\n        }\n    }\n\n    static getDerivedStateFromProps(nextProps: Readonly<IProps>, prevState: IState) {\n        const {token} = nextProps\n        if (!token) return {...prevState, isAuth: false}\n        return (token !== prevState.token) ? {...prevState, token, isAuth: true} : null\n    }\n\n    async componentDidMount() {\n        const {token} = this.props\n        const isAuth = (await axios(`/user/isAuth`, {headers: {'auth-token': token}})).data\n        if (isAuth) this.setState({isAuth})\n        if (this.props.match.params.id) this.setState({updating: true}) //Если обратились по id => редактируем\n        if (this.state.updating) {\n            const data = (await axios(`/posts/${this.props.match.params.id}`)).data\n            this.setState({data: data})\n        }\n        console.log(this.state)\n    }\n\n    onUpdate = async (values: IProps) => {\n        const {author, title, description, theme} = values\n        try {\n            await axios.put(`/posts/${this.props.match.params.id}`, {author, title, description, theme})\n            alert('Updated successfully!')\n            historyService.history!.push('/private')\n        } catch (e) {\n            alert('Something goes wrong! Try again!')\n            console.log(e)\n        }\n    }\n\n    onSubmit = async (values: IProps) => {\n        const {author, title, description, theme} = values\n        const {token} = this.props\n        console.log(values)\n         try {\n             await axios.post(`/posts/`, {author, title, description, theme}, {headers: {'auth-token': token}})\n             historyService.history!.push('/')\n         } catch (e) {\n             alert('Something goes wrong! Try again!')\n             console.log(e)\n         }\n    }\n\n    render() {\n        const {author} = this.props\n        const {data: {title, description, theme}, updating, isAuth} = this.state\n        if (isAuth) {\n            return (\n                <div className={styles.root}>\n                    <Form\n                        onSubmit={updating ? this.onUpdate : this.onSubmit}\n                        initialValues={{author, title, description, theme}}\n                        validate={(values: IProps) => {\n                            const errors: IProps = {}\n                            if (!values.title) {\n                                errors.title = 'Required'\n                            }\n                            if (!values.description) {\n                                errors.description = 'Required'\n                            }\n                            if (!values.theme) {\n                                errors.theme = 'Required'\n                            }\n                            return errors\n                        }}\n                        render={({handleSubmit, submitting, pristine}) => (\n                            <UIForm onSubmit={handleSubmit}>\n                                <Field name=\"title\">\n                                    {({input, meta}) => (\n                                        <div>\n                                            <label>Your wish</label>\n                                            <input {...input} type=\"text\" placeholder=\"Type your wish here!\"\n                                                   className={meta.error && meta.touched ? styles.errorField : ''}/>\n                                            {meta.error && meta.touched &&\n                                            <span className={styles.error}>{meta.error}</span>}\n                                        </div>\n                                    )}\n                                </Field>\n                                <Field name=\"description\">\n                                    {({input, meta}) => (\n                                        <div>\n                                            <label>Description</label>\n                                            <textarea {...input} placeholder=\"Add some description to your wish!\"\n                                                      className={meta.error && meta.touched ? styles.errorField : ''}/>\n                                            {meta.error && meta.touched &&\n                                            <span className={styles.error}>{meta.error}</span>}\n                                        </div>\n                                    )}\n                                </Field>\n                                <Field name=\"theme\">\n                                    {({input, meta}) => (\n                                        <div className={styles.select}>\n                                            <label>Theme of your wish</label>\n                                            <select {...input} placeholder={'Choose theme of your wish'}\n                                                    className={meta.error && meta.touched ? styles.errorField : ''}>\n                                                <option />\n                                                <option value=\"Drink\">Drink</option>\n                                                <option value=\"Walk\">Walk</option>\n                                                <option value=\"Cinema\">Cinema</option>\n                                                <option value=\"Concert\">Concert</option>\n                                                <option value=\"Outdoors\">Outdoors</option>\n                                                <option value=\"Chill\">Chill</option>\n                                                <option value=\"Travel\">Travel</option>\n                                                <option value=\"Game\">Game</option>\n                                                <option value=\"Other\">Other</option>\n                                            </select>\n                                            {meta.error && meta.touched &&\n                                            <span className={styles.error}>{meta.error}</span>\n                                            }\n                                        </div>\n                                    )}\n                                </Field>\n\n                                {/* <Field name=\"date\">\n                                    {({ input, meta }) => (\n                                        <>\n                                            <DatePick\n                                                type=\"text\"\n                                                {...input}\n                                            />\n                                            {meta.error && meta.touched &&\n                                            <span className={styles.error}>{meta.error}</span>}\n                                        </>\n                                    )}\n                                </Field>*/}\n                                {/*  <Field name=\"date\">\n                                    {() => <DatePick/>}\n                                </Field>*/}\n                                <div className={styles.button}>\n                                    <Button type='submit' disabled={submitting || pristine}>Submit</Button>\n                                </div>\n                            </UIForm>\n                        )}\n                    />\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <h1>403 forbidden</h1>\n                </div>\n            )\n        }\n    }\n}\n\nexport default WishForm","import React from 'react'\nimport styles from './styles.scss'\nimport Header from './Header'\nimport {Switch, Route} from 'react-router-dom'\nimport Private from './Private/Private'\nimport Home from './Home/Home'\nimport Post from './Post/Post'\nimport Footer from \"./Footer\";\nimport FourOFour from \"./404\";\nimport Form from './Form'\nimport Button from \"../../../src/components/Button\";\nimport historyService from \"../../services/historyService\";\nimport axios from \"axios\";\nimport {IStore} from \"../../store/reducers\";\nimport {connect} from \"react-redux\";\n\ninterface IProps {\n    id?: string,\n    token?: string\n}\n\ninterface IState {\n    token?: string\n    isAuth: boolean\n}\n\nclass _App extends React.Component<IProps, IState> {\n    state = {\n        isAuth: false\n    }\n\n    static getDerivedStateFromProps(nextProps: Readonly<IProps>, prevState: IState) {\n        const {token} = nextProps\n        if (!token) return {...prevState, isAuth: false}\n        return (token !== prevState.token) ? {...prevState, token, isAuth: true} : null\n    }\n\n    async componentDidMount() {\n        const {token} = this.props\n        const isAuth = (await axios(`/user/isAuth`, {headers: {'auth-token': token}})).data\n        if (isAuth) return this.setState({isAuth})\n    }\n\n    render() {\n        return (\n            <div className={styles.root}>\n                <Header/>\n                <div className={styles.body}>\n                    <div className={styles.content}>\n                        <Switch>\n                            <Route path=\"/private\">\n                                <Private/>\n                            </Route>\n                            <Route exact path=\"/posts/add\"\n                                   render={(props:any) => <Form {...props} author={this.props.id} token={this.props.token}/>}/>\n                            <Route exact path=\"/posts/update/:id\"\n                                   render={(props:any) => <Form {...props} author={this.props.id} token={this.props.token}/>}/>\n                            <Route exact path=\"/\">\n                                {this.state.isAuth\n                                    ? <div className={styles.addButton}>\n                                        <Button\n                                            onClick={() => historyService.history!.push('/posts/add')}\n                                        ><span className={styles.plus}>+</span>Add new Wish!</Button>\n                                    </div>\n                                    : null\n                                }\n                                <Home/>\n                            </Route>\n                            <Route exact path=\"/posts/:id\" component={Post}/>\n                            <Route path=\"*\" component={FourOFour}/>\n                        </Switch>\n                    </div>\n                    <Footer/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({accountStore: {id, token}}: IStore) => ({id, token})\n\nconst App = connect(mapStateToProps)(_App)\n\nexport default App","import {actionTypes, IAction} from \"../actions\";\n\n\nconst accountReducer = (state = {}, {type, ...payload}: IAction) => {\n    switch (type) {\n        case actionTypes.LOGIN:\n            return {...state, ...payload};\n        case actionTypes.LOGOUT:\n            return {...state, id: undefined, token: undefined};\n        default:\n            return state\n    }\n}\n\nexport default accountReducer\n","import {combineReducers} from 'redux'\nimport accountStore from './accountReducer'\n\nexport interface IAccountStore {\n    token?: string\n    id?: string\n}\n\nexport interface IStore {\n    accountStore: IAccountStore\n}\n\nexport default combineReducers({accountStore})\n","import {loadState, saveState} from \"../utils/localStore\";\nimport {createStore} from \"redux\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = loadState();\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nstore.subscribe(() => {\n    saveState({\n        accountStore: store.getState().accountStore\n    });\n});\n\nexport default store","export const loadState = (): any | undefined => {\n    try {\n        const state = JSON.parse(localStorage.getItem('store') as string);\n        return state || undefined;\n\n    } catch (error) {\n        console.log(error);\n        return undefined;\n    }\n\n};\nexport const saveState = (state: any): void => {\n    localStorage.setItem('store', JSON.stringify(state));\n};\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './layout/App/App'\nimport {Provider} from 'react-redux'\nimport {Router} from \"react-router-dom\";\nimport historyService from './services/historyService'\nimport store from \"./store\";\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router history={historyService.history}>\n            <App/>\n        </Router>\n    </Provider>\n    , document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__12GUv\",\"plus\":\"styles_plus__2IgyS\",\"addButton\":\"styles_addButton__A52lo\",\"button\":\"styles_button__1RiNJ\",\"delButton\":\"styles_delButton__1EiL0\"};"],"sourceRoot":""}