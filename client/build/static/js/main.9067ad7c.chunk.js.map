{"version":3,"sources":["components/Button/index.tsx","layout/App/Header/LoginDialog.tsx","layout/App/Header/RegisterDialog.tsx","layout/App/Header/index.tsx","store/actions/index.ts","layout/App/Todo.tsx","layout/App/TodoList.tsx","layout/App/VisibleTodoList.ts","layout/App/AddTodo.tsx","layout/App/App.tsx","store/reducers/todos.ts","store/reducers/visibilityFilter.ts","store/reducers/index.ts","index.tsx","layout/App/Header/styles.scss","layout/App/styles.scss","components/Button/styles.scss"],"names":["Button","children","props","className","styles","root","LoginDialog","state","visible","email","pass","handleOpenLoginDialog","setState","handleCloseLoginDialog","handleChangePass","target","value","handleChangeEmail","handleLogin","a","password","axios","post","res","console","log","this","onClick","title","onClose","footer","row","dialogBody","onChange","input","React","Component","RegisterDialog","username","handleOpenDialog","handleCloseDialog","handleChangeUsername","handleSubmit","Header","buttonSet","nextTodoId","VisibilityFilters","Todo","completed","text","style","textDecoration","TodoList","todos","toggleTodo","map","todo","key","id","getVisibleTodos","filter","t","Error","connect","visibilityFilter","dispatch","type","onSubmit","e","preventDefault","trim","ref","node","App","VisibleTodoList","Footer","action","combineReducers","store","createStore","rootReducer","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.9067ad7c.chunk.js","sourcesContent":["import React from 'react';\nimport styles from './styles.scss';\n\nconst Button: React.FC<React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>> = ({children, ...props}) => <button className={styles.root} {...props}>{children}</button>;\nexport default Button\n","import React from 'react';\nimport Dialog from \"rc-dialog\";\nimport styles from \"./styles.scss\";\nimport Button from \"../../../components/Button\";\nimport axios from \"axios\";\n\ninterface IProps {\n\n}\n\ninterface IState {\n    visible: boolean\n    email: string\n    pass: string\n}\n\n\nexport default class LoginDialog extends React.Component<IProps, IState> {\n    state = {visible: false, email: '', pass: ''};\n\n    handleOpenLoginDialog = () => this.setState({visible: true});\n\n    handleCloseLoginDialog = () => this.setState({visible: false});\n\n    handleChangePass = ({target: {value: pass}}: React.ChangeEvent<HTMLInputElement>) => this.setState({pass});\n\n    handleChangeEmail = ({target: {value: email}}: React.ChangeEvent<HTMLInputElement>) => this.setState({email});\n\n    handleLogin = async () => {\n        const {email, pass: password} = this.state;\n        const res = await axios.post('http://localhost:8080/user/login', {email, password});\n        console.log(res)\n    }\n\n    render() {\n        const {email, pass, visible} = this.state;\n\n        return <>\n            <Button onClick={this.handleOpenLoginDialog}>Login</Button>\n            <Dialog\n                title={'Login'}\n                onClose={this.handleCloseLoginDialog}\n                visible={visible}\n                footer={\n                    <div className={styles.row}>\n                        <Button onClick={this.handleLogin}>Login</Button>\n                    </div>}\n            >\n                <div className={styles.dialogBody}>\n                    <div className={styles.row}>\n                        <p>Email</p>\n                        <input onChange={this.handleChangeEmail} className={styles.input} value={email}/>\n                    </div>\n                    <div className={styles.row}>\n                        <p>Password</p>\n                        <input onChange={this.handleChangePass} className={styles.input} value={pass}/>\n                    </div>\n                </div>\n            </Dialog>\n        </>\n\n    }\n}\n","import React from 'react';\nimport Dialog from \"rc-dialog\";\nimport styles from \"./styles.scss\";\nimport Button from \"../../../components/Button\";\nimport axios from \"axios\";\n\n\ninterface IProps {\n\n}\n\ninterface IState {\n    visible: boolean\n    email: string\n    pass: string\n    username: string\n}\n\n\nexport default class RegisterDialog extends React.Component<IProps, IState> {\n    state = {visible: false, email: '', pass: '', username: ''};\n\n    handleOpenDialog = () => this.setState({visible: true});\n\n    handleCloseDialog = () => this.setState({visible: false});\n\n    handleChangePass = ({target: {value: pass}}: React.ChangeEvent<HTMLInputElement>) => this.setState({pass});\n\n    handleChangeEmail = ({target: {value: email}}: React.ChangeEvent<HTMLInputElement>) => this.setState({email});\n\n    handleChangeUsername = ({target: {value: username}}: React.ChangeEvent<HTMLInputElement>) => this.setState({username});\n\n    handleSubmit = async () => {\n        const {email, pass: password, username} = this.state;\n        const res = await axios.post('http://localhost:8080/user/register', {email, password, username});\n        console.log(res)\n    }\n\n    render() {\n        const {email, pass, visible, username} = this.state;\n\n        return <>\n            <Button onClick={this.handleOpenDialog}>Register</Button>\n            <Dialog\n                title={'Register'}\n                onClose={this.handleCloseDialog}\n                visible={visible}\n                footer={\n                    <div className={styles.row}>\n                        <Button onClick={this.handleSubmit}>Register</Button>\n                    </div>}\n            >\n                <div className={styles.dialogBody}>\n                    <div className={styles.row}>\n                        <p>Username</p>\n                        <input onChange={this.handleChangeUsername} className={styles.input} value={username}/>\n                    </div>\n                    <div className={styles.row}>\n                        <p>Email</p>\n                        <input onChange={this.handleChangeEmail} className={styles.input} value={email}/>\n                    </div>\n                    <div className={styles.row}>\n                        <p>Password</p>\n                        <input onChange={this.handleChangePass} className={styles.input} value={pass}/>\n                    </div>\n                </div>\n            </Dialog>\n        </>\n\n    }\n}\n","import React from 'react';\nimport styles from './styles.scss';\nimport 'rc-dialog/assets/index.css'\nimport LoginDialog from './LoginDialog'\nimport RegisterDialog from \"./RegisterDialog\";\n\ninterface IState {\n}\n\ninterface IProps {\n\n}\n\nexport class Header extends React.Component<IProps, IState> {\n\n    render() {\n        return (\n            <div className={styles.root}>\n                <b>WISHERY</b>\n                <div className={styles.buttonSet}>\n                    <LoginDialog/>\n                    <RegisterDialog/>\n                </div>\n            </div>\n        )\n    }\n}\n\n\n","let nextTodoId = 0;\n\nexport type TActionType = 'ADD_TODO' | 'SET_VISIBILITY_FILTER' | 'TOGGLE_TODO'\n\nexport type TFilterType = 'SHOW_ALL' | 'SHOW_COMPLETED' | 'SHOW_ACTIVE'\n\nexport interface IAction {\n    type: TActionType\n}\n\nexport interface IAddTodoAction extends IAction{\n    id: number\n    text: string\n}\nexport interface ISetVisibilityFiltern extends IAction{\n    filter: TFilterType\n}\nexport interface IToggleTodo extends IAction{\n    id: number\n}\n\n\nexport const addTodo = (text: string): IAddTodoAction => ({\n    type: 'ADD_TODO',\n    id: nextTodoId++,\n    text\n});\n\nexport const setVisibilityFilter = (filter: TFilterType): ISetVisibilityFiltern => ({\n    type: 'SET_VISIBILITY_FILTER',\n    filter\n});\n\nexport const toggleTodo = (id: number): IToggleTodo => ({\n    type: 'TOGGLE_TODO',\n    id\n});\n\nexport const VisibilityFilters = {\n    SHOW_ALL: 'SHOW_ALL',\n    SHOW_COMPLETED: 'SHOW_COMPLETED',\n    SHOW_ACTIVE: 'SHOW_ACTIVE'\n};\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Todo = ({ onClick, completed, text }: any) => (\n    <li\n        onClick={onClick}\n        style={{\n            textDecoration: completed ? 'line-through' : 'none'\n        }}\n    >\n        {text}\n    </li>\n)\n\nTodo.propTypes = {\n    onClick: PropTypes.func.isRequired,\n    completed: PropTypes.bool.isRequired,\n    text: PropTypes.string.isRequired\n}\n\nexport default Todo\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Todo from './Todo'\n\nconst TodoList = ({ todos, toggleTodo }: any) => (\n    <ul>\n        {todos.map((todo: any) => (\n                <Todo key={todo.id} {...todo} onClick={() => toggleTodo(todo.id)} />\n))}\n</ul>\n)\n\nTodoList.propTypes = {\n    todos: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            completed: PropTypes.bool.isRequired,\n            text: PropTypes.string.isRequired\n        }).isRequired\n    ).isRequired,\n    toggleTodo: PropTypes.func.isRequired\n}\n\nexport default TodoList\n","import { connect } from 'react-redux'\nimport { toggleTodo, VisibilityFilters } from '../../store/actions'\nimport TodoList from './TodoList'\n\nconst getVisibleTodos = (todos: any, filter: any) => {\n    switch (filter) {\n        case VisibilityFilters.SHOW_ALL:\n            return todos\n        case VisibilityFilters.SHOW_COMPLETED:\n            return todos.filter((t: any) => t.completed)\n        case VisibilityFilters.SHOW_ACTIVE:\n            return todos.filter((t: any) => !t.completed)\n        default:\n            throw new Error('Unknown filter: ' + filter)\n    }\n}\n\nconst mapStateToProps = (state: any) => ({\n    todos: getVisibleTodos(state.todos, state.visibilityFilter)\n})\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    toggleTodo: (id: number) => dispatch(toggleTodo(id))\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TodoList)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { addTodo } from '../../store/actions'\n\nconst AddTodo = ({ dispatch }: any) => {\n    let input: any\n\n    return (\n        <div>\n            <form\n                onSubmit={e => {\n                    e.preventDefault()\n                    if (!input.value.trim()) {\n                        return\n                    }\n                    dispatch(addTodo(input.value))\n                    input.value = ''\n                }}\n            >\n                <input ref={node => (input = node)} />\n                <button type=\"submit\">Add Todo</button>\n            </form>\n        </div>\n    )\n}\n\nexport default connect()(AddTodo)\n","import React from 'react';\nimport styles from './styles.scss';\nimport {Header} from \"./Header\";\nimport VisibleTodoList from \"./VisibleTodoList\";\nimport AddTodo from './AddTodo'\n\ninterface IInjectedPrios {\n    accountStore?: any\n}\n\ninterface IProps extends IInjectedPrios {\n}\n\ninterface IState {\n}\n\nclass App extends React.Component<IProps, IState> {\n    render() {\n        return <div className={styles.root}>\n            <Header/>\n            <AddTodo />\n            <VisibleTodoList />\n            <Footer/>\n        </div>\n    }\n};\n\n\nexport default App\n\nconst Footer: React.FC =  () => <div className={styles.footer}>© wishery</div>;\n","\nconst todos = (state = [], action: any): any => {\n    switch (action.type) {\n        case 'ADD_TODO':\n            return [\n                ...state,\n                {\n                    id: action.id,\n                    text: action.text,\n                    completed: false\n                }\n            ]\n        case 'TOGGLE_TODO':\n            return state.map((todo: any) =>\n                todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\n            )\n        default:\n            return state\n    }\n}\n\nexport default todos\n","import { VisibilityFilters } from '../actions'\n\nconst visibilityFilter = (state = VisibilityFilters.SHOW_ALL, action: any) => {\n    switch (action.type) {\n        case 'SET_VISIBILITY_FILTER':\n            return action.filter\n        default:\n            return state\n    }\n}\n\nexport default visibilityFilter\n","import { combineReducers } from 'redux'\nimport todos from './todos'\nimport visibilityFilter from './visibilityFilter'\n\nexport default combineReducers({todos, visibilityFilter})\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './layout/App/App';\nimport {Provider} from 'react-redux'\nimport {createStore} from 'redux'\nimport rootReducer from './store/reducers'\n// import { createBrowserHistory } from 'history';\n\nconst store = createStore(rootReducer)\n\n\n// autorun(() => {\n//         console.dir(mobXStore);\n//         saveState(mobXStore.serialize());\n//     },\n// const history = createBrowserHistory();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>\n    , document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__36oOn\",\"dialogBody\":\"styles_dialogBody__21Qr2\",\"input\":\"styles_input__2k2tA\",\"row\":\"styles_row__30zYH\",\"buttonSet\":\"styles_buttonSet__1fOGN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__z_8qL\",\"footer\":\"styles_footer__1UlIF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__21ruz\"};"],"sourceRoot":""}